{"version":3,"file":"deckgl.js","mappings":"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","sources":["webpack:///./src/lib/components/utils/script-utils.js","webpack:///./src/lib/components/utils/json-converter.js","webpack:///./src/lib/components/utils/widget-tooltip.js","webpack:///./src/lib/components/Deckgl.jsx","webpack:///./src/lib/components/utils/mapbox-utils.js","webpack:///./src/lib/components/utils/css-utils.js"],"sourcesContent":["/* global document */\n\n// Ensure we only load a script once\nconst scriptLoadPromises = {};\n\nexport function loadScript(url) {\n  if (!scriptLoadPromises[url]) {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    const head = document.querySelector('head');\n    head.appendChild(script);\n\n    scriptLoadPromises[url] = new Promise(resolve => {\n      script.onload = resolve;\n    });\n  }\n  return scriptLoadPromises[url];\n}\n","import React, {useContext, createContext, useEffect, useState} from 'react';\n\nimport {COORDINATE_SYSTEM, log, WebMercatorViewport} from '@deck.gl/core';\nimport GLConstants from '@luma.gl/constants';\nimport {JSONConverter} from '@deck.gl/json';\nimport {loadScript} from './script-utils';\nimport * as deckExports from '../../bundles';\n\nconst classesFilter = (x) => x.charAt(0) === x.charAt(0).toUpperCase();\nconst functionsFilter = (x) =>\n    x.charAt(0) === x.charAt(0).toLowerCase() && x.charAt(0) !== '_';\n\nconst extractElements = (library = {}, filter) => {\n    // Extracts exported elements as a dictionary from a library\n    const dict = {};\n    const elements = Object.keys(library).filter(filter);\n    for (const el of elements) {\n        dict[el] = library[el];\n    }\n    return dict;\n};\n\n// Handle JSONConverter and loaders configuration\nconst jsonConverterConfiguration = {\n    classes: extractElements(deckExports, classesFilter),\n    // Will be resolved as `<enum-name>.<enum-value>`\n    enumerations: {\n        COORDINATE_SYSTEM,\n        GL: GLConstants,\n    },\n};\n\nconst ConverterContext = createContext();\nconst useConverter = () => useContext(ConverterContext);\n\nconst ConverterProvider = ({configuration, customLibraries, children}) => {\n    const [jsonConverter, setJsonConverter] = useState(\n        new JSONConverter({configuration: jsonConverterConfiguration})\n    );\n\n    const mergeConfiguration = (configuration) => {\n        if (!configuration) return;\n        const newConverter = new JSONConverter({...jsonConverter});\n        newConverter.mergeConfiguration(configuration);\n        newConverter.convertedJson = null;\n        setJsonConverter(newConverter);\n    };\n\n    useEffect(() => {\n        mergeConfiguration(configuration);\n    }, [configuration]);\n\n    const onModuleLoaded = (libraryName, module) => {\n        const newConfiguration = {\n            classes: extractElements(module, classesFilter),\n            functions: extractElements(module, functionsFilter),\n        };\n        mergeConfiguration(newConfiguration);\n    };\n\n    useEffect(() => {\n        if (!customLibraries) return;\n        const loaded = {};\n        customLibraries.forEach(({libraryName, resourceUri}) => {\n            loaded[libraryName] = false;\n\n            if (libraryName in window) {\n                // do not redefine\n                onModuleLoaded(libraryName, window[libraryName]);\n                loaded[libraryName] = window[libraryName];\n                return;\n            }\n\n            // because loadscript is async and scipt execution is untraceble\n            // the only way we can listen on its execution complete is to observe on the\n            // window.libraryName property\n            Object.defineProperty(window, libraryName, {\n                set: (module) => {\n                    onModuleLoaded(libraryName, module);\n                    loaded[libraryName] = module;\n                },\n                get: () => {\n                    return loaded[libraryName];\n                },\n            });\n\n            loadScript(resourceUri);\n        });\n    }, [customLibraries]);\n\n    return (\n        <ConverterContext.Provider value={jsonConverter}>\n            {children}\n        </ConverterContext.Provider>\n    );\n};\n\nexport {ConverterProvider, useConverter};\n","/* global document */\nlet lastPickedObject;\nlet lastTooltip;\n\nconst DEFAULT_STYLE = {\n    fontFamily: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    display: 'flex',\n    flex: 'wrap',\n    maxWidth: '500px',\n    flexDirection: 'column',\n    zIndex: 2,\n};\n\nfunction getDiv() {\n    return document.createElement('div');\n}\n\nconst EXCLUDES = new Set(['position', 'index']);\n\nexport function tabularize(json) {\n    // Turns a JSON object of picked info into HTML for a tooltip\n    const dataTable = getDiv();\n\n    // Creates rows of two columns for the tooltip\n    for (const key in json) {\n        if (EXCLUDES.has(key)) {\n            continue; // eslint-disable-line\n        }\n        const header = getDiv();\n        header.className = 'header';\n        header.textContent = key;\n\n        const valueElement = getDiv();\n        valueElement.className = 'value';\n\n        valueElement.textContent = toText(json[key]);\n\n        const row = getDiv();\n\n        setStyles(row, header, valueElement);\n\n        row.appendChild(header);\n        row.appendChild(valueElement);\n        dataTable.appendChild(row);\n    }\n\n    return dataTable.innerHTML;\n}\n\nfunction setStyles(row, header, value) {\n    // Set default tooltip style\n    Object.assign(header.style, {\n        fontWeight: 700,\n        marginRight: '10px',\n        flex: '1 1 0%',\n    });\n\n    Object.assign(value.style, {\n        flex: 'none',\n        maxWidth: '250px',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n    });\n\n    Object.assign(row.style, {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'stretch',\n    });\n}\n\nexport function toText(jsonValue) {\n    // Set contents of table value, trimming for certain types of data\n    let text;\n    if (Array.isArray(jsonValue) && jsonValue.length > 4) {\n        text = `Array<${jsonValue.length}>`;\n    } else if (typeof jsonValue === 'string') {\n        text = jsonValue;\n    } else if (typeof jsonValue === 'number') {\n        text = String(jsonValue);\n    } else {\n        try {\n            text = JSON.stringify(jsonValue);\n        } catch (err) {\n            text = '<Non-Serializable Object>';\n        }\n    }\n    const MAX_LENGTH = 50;\n    if (text.length > MAX_LENGTH) {\n        text = text.slice(0, MAX_LENGTH);\n    }\n    return text;\n}\n\nexport function substituteIn(template, json) {\n    /*\n     * Flexible substitution of templates using a json:\n     * - if the json contains the key, use [key]\n     * - if the json does not contain the key, try ['properties'][key]\n     * - if the key contains several keys separated with dots, use them all in a row:\n     *   e.g. 'a.b.c' will read json['a']['b']['c']\n     */\n    let value;\n    let output = template;\n    const propsKey = 'properties';\n    const keyPattern = /{[^}]*}/g;\n    const cleanKey = (k) => k.replace(/[{}]/g, '');\n    const keys = [...new Set(template.match(keyPattern).map(cleanKey))];\n\n    for (const key of keys) {\n        if (key.includes('.')) {\n            value = json;\n            const subkeys = key.split('.');\n            for (const subkey of subkeys) {\n                if (value.hasOwnProperty(subkey)) {\n                    value = value[subkey];\n                } else {\n                    value = undefined;\n                    break;\n                }\n            }\n        } else if (json.hasOwnProperty(key)) {\n            value = json[key];\n        } else if (json[propsKey] && json[propsKey].hasOwnProperty(key)) {\n            value = json[propsKey][key];\n        } else {\n            value = undefined;\n        }\n        output = output.replaceAll(`{${key}}`, value);\n    }\n\n    return output;\n}\n\nexport default function makeTooltip(tooltips) {\n    /*\n     * If explictly no tooltip passed by user, return null\n     * If a JSON object passed, return a tooltip based on that object\n     *   We expect the user has passed a string template that will take pickedInfo keywords\n     * If a boolean passed, return the default tooltip\n     */\n    if (!tooltips) {\n        return null;\n    }\n    if (tooltips.length) {\n        return (pickedInfo) => {\n            if (!pickedInfo.picked) {\n                return null;\n            }\n            let formattedTooltip = null;\n            tooltips.map((tooltip) => {\n                //console.log(pickedInfo);\n                if (tooltip.layer && !(pickedInfo.layer.id == tooltip.layer)) {\n                    return null;\n                }\n\n                formattedTooltip = {\n                    style: tooltip.style || DEFAULT_STYLE,\n                };\n\n                if (tooltip.html) {\n                    formattedTooltip.html = substituteIn(\n                        tooltip.html,\n                        pickedInfo.object\n                    );\n                } else {\n                    formattedTooltip.text = substituteIn(\n                        tooltip.text,\n                        pickedInfo.object\n                    );\n                }\n            });\n            return formattedTooltip;\n        };\n    }\n\n    return getTooltipDefault;\n}\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {DeckGL} from '@deck.gl/react';\nimport {BASEMAP} from '@deck.gl/carto';\nimport {Map} from 'react-map-gl';\n\nimport {loadMapboxCSS} from './utils/mapbox-utils';\nimport {useConverter, ConverterProvider} from './utils/json-converter';\nimport makeTooltip from './utils/widget-tooltip';\n\nconst DeckglMap = ({\n    spec,\n    tooltips,\n    width = '100%',\n    height = 500,\n    events = [],\n    description,\n    overlay,\n    mapbox_key,\n    google_maps_key,\n    setProps,\n    lastEvent,\n}) => {\n    const [primaryProps, setPrimaryProps] = useState({});\n    const [overlayProps, setOverlayProps] = useState({});\n    const [librariesLoaded, setLibrariesLoaded] = useState(false);\n    const [configurationLoaded, setConfigurationLoaded] = useState(false);\n    const jsonConverter = useConverter();\n\n    const [viewState, setViewState] = useState(null);\n\n    const descriptions = [];\n    if (description) {\n        for (const key in description) {\n            if (\n                [\n                    'top-right',\n                    'top-left',\n                    'bottom-right',\n                    'bottom-left',\n                ].includes(key)\n            ) {\n                const pos = key.split('-');\n                descriptions.push({pos, content: description[key]});\n            }\n        }\n    }\n\n    const handleEvent = useCallback(\n        (eventType, info) => {\n            if (events.includes(eventType)) {\n                setProps({\n                    lastEvent: {\n                        ...info.object,\n                        coordinate: info.coordinate,\n                        eventType,\n                    },\n                });\n            }\n        },\n        [events]\n    );\n\n    const handlers = {\n        onClick: (info) => handleEvent('click', info),\n        onHover: (info) => handleEvent('hover', info),\n        // onViewStateChange: ({viewState, interactionState, oldViewState}) => {\n        //     const viewport = new WebMercatorViewport(viewState);\n        //     viewState.nw = viewport.unproject([0, 0]);\n        //     viewState.se = viewport.unproject([\n        //         viewport.width,\n        //         viewport.height,\n        //     ]);\n        //     handleEvent('deck-view-state-change-event', viewState);\n        // },\n        onDragStart: (info) => handleEvent('drag-start', info),\n        onDrag: (info) => handleEvent('drag', info),\n        onDragEnd: (info) => handleEvent('drag-end', info),\n    };\n\n    const getTooltip = makeTooltip(tooltips);\n\n    const sharedProps = {\n        ...handlers,\n        getTooltip,\n    };\n\n    useEffect(() => {\n        loadMapboxCSS();\n    }, []);\n\n    useEffect(() => {\n        const newPrimaryProps = jsonConverter.convert(spec);\n        //console.log(newPrimaryProps);\n        if (!viewState && newPrimaryProps.initialViewState)\n            setViewState(newPrimaryProps.initialViewState);\n        setPrimaryProps({...primaryProps, ...newPrimaryProps});\n    }, [spec, jsonConverter]);\n\n    useEffect(() => {\n        const newOverlayProps = jsonConverter.convert(overlay);\n        setOverlayProps({...overlayProps, ...newOverlayProps});\n    }, [overlay, jsonConverter]);\n\n    const updateViewState = useCallback(({viewState}) => {\n        setViewState(viewState);\n    }, []);\n\n    if (google_maps_key) {\n        return <div>Google map overlays not supported</div>;\n    }\n\n    return (\n        <div\n            className=\"deckgl-map\"\n            style={{height, width, position: 'relative'}}\n        >\n            <div\n                id=\"deckgl-primary\"\n                style={{width: '100%', height: '100%', position: 'relative'}}\n            >\n                {viewState && (\n                    <DeckGL\n                        viewState={viewState}\n                        onViewStateChange={updateViewState}\n                        {...sharedProps}\n                        {...primaryProps}\n                    >\n                        <Map\n                            mapStyle={primaryProps.mapStyle || BASEMAP.POSITRON}\n                            mapboxAccessToken={mapbox_key}\n                        />\n                    </DeckGL>\n                )}\n            </div>\n            {overlay && (\n                <div\n                    id=\"deckgl-overlay\"\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        pointerEvents: 'none',\n                    }}\n                >\n                    <DeckGL\n                        viewState={viewState}\n                        contoller={false}\n                        {...sharedProps}\n                        {...overlayProps}\n                        style={{\n                            ...overlayProps.style,\n                            zIndex: 1,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        <Map\n                            mapStyle={overlayProps.mapStyle}\n                            mapboxAccessToken={mapbox_key}\n                        />\n                    </DeckGL>\n                </div>\n            )}\n            {descriptions.map((d, i) => (\n                <div\n                    key={i}\n                    className=\"description\"\n                    style={{\n                        position: 'absolute',\n                        zIndex: 10,\n                        [d.pos[0]]: 10,\n                        [d.pos[1]]: 10,\n                    }}\n                    dangerouslySetInnerHTML={{__html: d.content}}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst Deckgl = (props) => {\n    return (\n        <ConverterProvider\n            customLibraries={props.customLibraries}\n            configuration={props.configuration}\n        >\n            <DeckglMap {...props} />\n        </ConverterProvider>\n    );\n};\n\nexport default Deckgl;\n","/* global document */\nimport {loadCSS} from './css-utils';\n\nimport mapboxgl from 'mapbox-gl';\n\nconst MAPBOX_CSS_URL = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.13.2/mapbox-gl.css';\n\nexport default mapboxgl;\n\nexport function loadMapboxCSS(url = MAPBOX_CSS_URL) {\n  loadCSS(url);\n}\n\n/**\n * Hides elements in the mapbox-gl.js library and adds pydeck tag\n */\nexport function modifyMapboxElements() {\n  const classes = ['mapboxgl-missing-css'];\n  for (const c of classes) {\n    const el = document.getElementsByClassName(c)[0];\n    if (el && el.style) {\n      el.style.display = 'none';\n    }\n  }\n}\n","/* global document */\n// TODO - make sure this can be called multiple times without adding elements\nexport function loadCSS(url) {\n  const link = document.createElement('link');\n  link.type = 'text/css';\n  link.rel = 'stylesheet';\n  link.href = url;\n  document.getElementsByTagName('head')[0].appendChild(link);\n}\n\nexport function createContainer(width, height) {\n  const container = document.createElement('div');\n  container.style.width = Number.isFinite(width) ? `${width}px` : width;\n  container.style.height = `${height}px`;\n  container.style.position = 'relative';\n  return container;\n}\n"],"names":["scriptLoadPromises","classesFilter","x","charAt","toUpperCase","functionsFilter","toLowerCase","extractElements","_step","library","arguments","length","undefined","filter","dict","_iterator","_createForOfIteratorHelper","Object","keys","s","n","done","el","value","err","e","f","jsonConverterConfiguration","classes","deckExports","enumerations","COORDINATE_SYSTEM","GL","GLConstants","ConverterContext","createContext","ConverterProvider","_ref","configuration","customLibraries","children","_useState2","useState","JSONConverter","jsonConverter","setJsonConverter","mergeConfiguration","newConverter","_objectSpread","convertedJson","useEffect","onModuleLoaded","libraryName","module","newConfiguration","functions","loaded","forEach","_ref2","resourceUri","window","defineProperty","set","get","url","script","document","createElement","type","src","querySelector","appendChild","Promise","resolve","onload","loadScript","React","Provider","DEFAULT_STYLE","fontFamily","display","flex","maxWidth","flexDirection","zIndex","substituteIn","template","json","output","propsKey","Set","match","map","k","replace","key","includes","_step2","_iterator2","split","subkey","hasOwnProperty","replaceAll","concat","DeckglMap","spec","tooltips","_ref$width","width","_ref$height","height","_ref$events","events","description","overlay","mapbox_key","google_maps_key","setProps","lastEvent","_slicedToArray","primaryProps","setPrimaryProps","_useState4","overlayProps","setOverlayProps","_useState6","_useState8","useContext","_useState10","viewState","setViewState","descriptions","pos","push","content","handleEvent","useCallback","eventType","info","object","coordinate","handlers","onClick","onHover","onDragStart","onDrag","onDragEnd","getTooltip","pickedInfo","picked","formattedTooltip","tooltip","layer","id","style","html","text","getTooltipDefault","makeTooltip","sharedProps","link","rel","href","getElementsByTagName","loadMapboxCSS","newPrimaryProps","convert","initialViewState","newOverlayProps","updateViewState","className","position","DeckGL","_extends","onViewStateChange","Map","mapStyle","BASEMAP","mapboxAccessToken","pointerEvents","contoller","d","i","_ref3","_defineProperty","dangerouslySetInnerHTML","__html","props"],"sourceRoot":""}