{"version":3,"file":"894.js","mappings":"qFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,IAAM,GACjCL,EAAoBM,QAAUN,EAC9BA,EAAoBO,GAAK,IACzBC,EAAOC,QAAUT,C,4xCCkHjB,QAvHe,SAAHU,GAYN,IAXFC,EAAID,EAAJC,KACAC,EAAOF,EAAPE,QACAC,EAAMH,EAANG,OACAC,EAAeJ,EAAfI,gBACAC,EAAaL,EAAbK,cACAC,EAAMN,EAANM,OACAC,EAAWP,EAAXO,YACAC,EAAOR,EAAPQ,QACAC,EAAUT,EAAVS,WACAC,EAAeV,EAAfU,gBACAC,EAAQX,EAARW,SAEMC,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAaD,EAAAA,EAAAA,QAAO,MAEpBE,EAAYT,GAAUA,EAAOU,KAAI,SAACC,GAAK,cAAAC,OAAaD,EAAK,aACzDE,EAAQC,OAAOC,WAAa,GAE5BC,EAAe,GACrB,GAAIf,EACA,IAAK,IAAMgB,KAAOhB,EACd,GACI,CACI,YACA,WACA,eACA,eACFiB,SAASD,GACb,CACE,IAAME,EAAMF,EAAIG,MAAM,KACtBJ,EAAaK,KAAK,CAAC,CAACF,IAAAA,EAAKG,QAASrB,EAAYgB,KAClD,CAsDR,OAlDAM,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAkB,KAChBC,EAAUC,KAAKC,MAAMhC,GA2B3B,IAXqBiC,EAAAA,EAAAA,YAAW,CAC5BC,aAAc1B,EACd2B,iBAAkB1B,EAClBE,WAAAA,EACAyB,UAAWN,EACX7B,QAAAA,EACAE,gBAAAA,EACAC,cAAAA,EACAiC,YAtBoB,SAACC,EAAWC,GACd,iCAAdD,IACAE,QAAQC,IAAIF,GAERV,GACAA,EAAgBnB,SAAS,CAACgC,UAAWH,KAIzClC,GAAUS,EAAUS,SAASe,IAAcC,EAAKI,QAChDjC,EAAS,CAACiC,OAAQJ,EAAKI,QAE/B,IAaIpC,EAAS,CACT,IAAMqC,EAAcb,KAAKC,MAAMzB,GAC/BqC,EAAYF,UAAYZ,EAAQe,kBAAoB,CAAC,EACrDD,EAAYE,MAAKC,EAAAA,EAAA,GACVH,EAAYE,OAAK,IACpB,UAAW,EACX,iBAAkB,SAEtBF,EAAYI,MAAM,GAAGC,YAAa,EAClCpB,GAAkBI,EAAAA,EAAAA,YAAW,CACzBC,aAAc1B,EACd2B,iBAAkB1B,EAClByC,UAAWrC,EACXuB,UAAWQ,EACX3C,QAAAA,EACAE,gBAAAA,EACAC,cAAAA,GAER,CACJ,GAAG,IAGC+C,IAAAA,cAAA,OAAKvD,GAAG,iBAAiBkD,MAAO,CAAC5C,OAAAA,IAC7BiD,IAAAA,cAAA,OACIvD,GAAG,iBACHkD,MAAO,CAAC5B,MAAAA,EAAOhB,OAAAA,EAAQkD,SAAU,cAEpC7C,GACG4C,IAAAA,cAAA,OACIvD,GAAG,iBACHkD,MAAO,CACH5B,MAAAA,EACAhB,OAAAA,EACAkD,SAAU,WACVC,cAAe,UAI1BhC,EAAaN,KAAI,SAACuC,GAAC,IAAAC,EAAA,OAChBJ,IAAAA,cAAA,OACIK,UAAU,cACVV,OAAKS,EAAA,CACDH,SAAU,WACVK,OAAQ,IAAEC,EAAAH,EACTD,EAAE9B,IAAI,GAAK,IAAEkC,EAAAH,EACbD,EAAE9B,IAAI,GAAK,IAAE+B,GAElBI,wBAAyBL,EAAE3B,SAC7B,IAIlB,C","sources":["webpack:///./node_modules/@deck.gl/jupyter-widget/dist/ sync","webpack:///./src/lib/fragments/Deckgl.jsx"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 814;\nmodule.exports = webpackEmptyContext;","import React, {useEffect, useRef} from 'react';\nimport {createDeck} from '@deck.gl/jupyter-widget';\n\nconst Deckgl = ({\n    spec,\n    tooltip,\n    height,\n    customLibraries,\n    configuration,\n    events,\n    description,\n    overlay,\n    mapbox_key,\n    google_maps_key,\n    setProps,\n}) => {\n    const primaryDiv = useRef(null);\n    const overlayDiv = useRef(null);\n\n    const eventlist = events && events.map((event) => `deck-${event}-event`);\n    const width = window.innerWidth - 10;\n\n    const descriptions = [];\n    if (description) {\n        for (const key in description) {\n            if (\n                [\n                    'top-right',\n                    'top-left',\n                    'bottom-right',\n                    'bottom-left',\n                ].includes(key)\n            ) {\n                const pos = key.split('-');\n                descriptions.push([{pos, content: description[key]}]);\n            }\n        }\n    }\n\n    useEffect(() => {\n        let overlayInstance = null;\n        const mapSpec = JSON.parse(spec);\n\n        const mapEventHandler = (eventType, info) => {\n            if (eventType === 'deck-view-state-change-event') {\n                console.log(info);\n\n                if (overlayInstance) {\n                    overlayInstance.setProps({viewState: info});\n                }\n            }\n\n            if (events && eventlist.includes(eventType) && info.object) {\n                setProps({object: info.object});\n            }\n        };\n\n        const deckInstance = createDeck({\n            mapboxApiKey: mapbox_key,\n            googleMapsApiKey: google_maps_key,\n            primaryDiv,\n            jsonInput: mapSpec,\n            tooltip,\n            customLibraries,\n            configuration,\n            handleEvent: mapEventHandler,\n        });\n\n        if (overlay) {\n            const overlaySpec = JSON.parse(overlay);\n            overlaySpec.viewState = mapSpec.initialViewState || {};\n            overlaySpec.style = {\n                ...overlaySpec.style,\n                'z-index': 1,\n                'pointer-events': 'none',\n            };\n            overlaySpec.views[0].controller = false;\n            overlayInstance = createDeck({\n                mapboxApiKey: mapbox_key,\n                googleMapsApiKey: google_maps_key,\n                container: overlayDiv,\n                jsonInput: overlaySpec,\n                tooltip,\n                customLibraries,\n                configuration,\n            });\n        }\n    }, []);\n\n    return (\n        <div id=\"deckgl-wrapper\" style={{height}}>\n            <div\n                id=\"deckgl-primary\"\n                style={{width, height, position: 'absolute'}}\n            />\n            {overlay && (\n                <div\n                    id=\"deckgl-overlay\"\n                    style={{\n                        width,\n                        height,\n                        position: 'absolute',\n                        pointerEvents: 'none',\n                    }}\n                />\n            )}\n            {descriptions.map((d) => (\n                <div\n                    className=\"description\"\n                    style={{\n                        position: 'absolute',\n                        zIndex: 10,\n                        [d.pos[0]]: 10,\n                        [d.pos[1]]: 10,\n                    }}\n                    dangerouslySetInnerHTML={d.content}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Deckgl;\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","_ref","spec","tooltip","height","customLibraries","configuration","events","description","overlay","mapbox_key","google_maps_key","setProps","primaryDiv","useRef","overlayDiv","eventlist","map","event","concat","width","window","innerWidth","descriptions","key","includes","pos","split","push","content","useEffect","overlayInstance","mapSpec","JSON","parse","createDeck","mapboxApiKey","googleMapsApiKey","jsonInput","handleEvent","eventType","info","console","log","viewState","object","overlaySpec","initialViewState","style","_objectSpread","views","controller","container","React","position","pointerEvents","d","_ref2","className","zIndex","_defineProperty","dangerouslySetInnerHTML"],"sourceRoot":""}