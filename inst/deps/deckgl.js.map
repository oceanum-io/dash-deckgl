{"version":3,"file":"deckgl.js","mappings":"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","sources":["webpack:///./src/lib/components/utils/script-utils.js","webpack:///./src/lib/components/utils/json-converter.js","webpack:///./src/lib/components/utils/widget-tooltip.js","webpack:///./src/lib/components/Deckgl.jsx","webpack:///./src/lib/components/utils/mapbox-utils.js","webpack:///./src/lib/components/utils/css-utils.js"],"sourcesContent":["/* global document */\n\n// Ensure we only load a script once\nconst scriptLoadPromises = {};\n\nexport function loadScript(url) {\n  if (!scriptLoadPromises[url]) {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    const head = document.querySelector('head');\n    head.appendChild(script);\n\n    scriptLoadPromises[url] = new Promise(resolve => {\n      script.onload = resolve;\n    });\n  }\n  return scriptLoadPromises[url];\n}\n","import React, {useContext, createContext, useEffect, useState} from 'react';\n\nimport {COORDINATE_SYSTEM, log, WebMercatorViewport} from '@deck.gl/core';\nimport GLConstants from '@luma.gl/constants';\nimport {JSONConverter} from '@deck.gl/json';\nimport {loadScript} from './script-utils';\nimport * as deckExports from '../../bundles';\n\nconst classesFilter = (x) => x.charAt(0) === x.charAt(0).toUpperCase();\nconst functionsFilter = (x) =>\n    x.charAt(0) === x.charAt(0).toLowerCase() && x.charAt(0) !== '_';\n\nconst extractElements = (library = {}, filter) => {\n    // Extracts exported elements as a dictionary from a library\n    const dict = {};\n    const elements = Object.keys(library).filter(filter);\n    for (const el of elements) {\n        dict[el] = library[el];\n    }\n    return dict;\n};\n\n// Handle JSONConverter and loaders configuration\nconst jsonConverterConfiguration = {\n    classes: extractElements(deckExports, classesFilter),\n    // Will be resolved as `<enum-name>.<enum-value>`\n    enumerations: {\n        COORDINATE_SYSTEM,\n        GL: GLConstants,\n    },\n};\n\nconst ConverterContext = createContext();\nconst useConverter = () => useContext(ConverterContext);\n\nconst ConverterProvider = ({configuration, customLibraries, children}) => {\n    const [jsonConverter, setJsonConverter] = useState(\n        new JSONConverter({configuration: jsonConverterConfiguration})\n    );\n\n    const mergeConfiguration = (configuration) => {\n        if (!configuration) return;\n        const newConverter = new JSONConverter({...jsonConverter});\n        newConverter.mergeConfiguration(configuration);\n        newConverter.convertedJson = null;\n        setJsonConverter(newConverter);\n    };\n\n    useEffect(() => {\n        mergeConfiguration(configuration);\n    }, [configuration]);\n\n    const onModuleLoaded = (libraryName, module) => {\n        const newConfiguration = {\n            classes: extractElements(module, classesFilter),\n            functions: extractElements(module, functionsFilter),\n        };\n        mergeConfiguration(newConfiguration);\n    };\n\n    useEffect(() => {\n        if (!customLibraries) return;\n        const loaded = {};\n        customLibraries.forEach(({libraryName, resourceUri}) => {\n            loaded[libraryName] = false;\n\n            if (libraryName in window) {\n                // do not redefine\n                onModuleLoaded(libraryName, window[libraryName]);\n                loaded[libraryName] = window[libraryName];\n                return;\n            }\n\n            // because loadscript is async and scipt execution is untraceble\n            // the only way we can listen on its execution complete is to observe on the\n            // window.libraryName property\n            Object.defineProperty(window, libraryName, {\n                set: (module) => {\n                    onModuleLoaded(libraryName, module);\n                    loaded[libraryName] = module;\n                },\n                get: () => {\n                    return loaded[libraryName];\n                },\n            });\n\n            loadScript(resourceUri);\n        });\n    }, [customLibraries]);\n\n    return (\n        <ConverterContext.Provider value={jsonConverter}>\n            {children}\n        </ConverterContext.Provider>\n    );\n};\n\nexport {ConverterProvider, useConverter};\n","/* global document */\nlet lastPickedObject;\nlet lastTooltip;\n\nconst DEFAULT_STYLE = {\n  fontFamily: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n  display: 'flex',\n  flex: 'wrap',\n  maxWidth: '500px',\n  flexDirection: 'column',\n  zIndex: 2\n};\n\nfunction getDiv() {\n  return document.createElement('div');\n}\n\nexport function getTooltipDefault(pickedInfo) {\n  if (!pickedInfo.picked) {\n    return null;\n  }\n  if (pickedInfo.object === lastPickedObject) {\n    return lastTooltip;\n  }\n  const tooltip = {\n    html: tabularize(pickedInfo.object),\n    style: DEFAULT_STYLE\n  };\n  lastTooltip = tooltip;\n  lastPickedObject = pickedInfo.object;\n  return tooltip;\n}\n\nconst EXCLUDES = new Set(['position', 'index']);\n\nexport function tabularize(json) {\n  // Turns a JSON object of picked info into HTML for a tooltip\n  const dataTable = getDiv();\n\n  // Creates rows of two columns for the tooltip\n  for (const key in json) {\n    if (EXCLUDES.has(key)) {\n      continue; // eslint-disable-line\n    }\n    const header = getDiv();\n    header.className = 'header';\n    header.textContent = key;\n\n    const valueElement = getDiv();\n    valueElement.className = 'value';\n\n    valueElement.textContent = toText(json[key]);\n\n    const row = getDiv();\n\n    setStyles(row, header, valueElement);\n\n    row.appendChild(header);\n    row.appendChild(valueElement);\n    dataTable.appendChild(row);\n  }\n\n  return dataTable.innerHTML;\n}\n\nfunction setStyles(row, header, value) {\n  // Set default tooltip style\n  Object.assign(header.style, {\n    fontWeight: 700,\n    marginRight: '10px',\n    flex: '1 1 0%'\n  });\n\n  Object.assign(value.style, {\n    flex: 'none',\n    maxWidth: '250px',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  });\n\n  Object.assign(row.style, {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'stretch'\n  });\n}\n\nexport function toText(jsonValue) {\n  // Set contents of table value, trimming for certain types of data\n  let text;\n  if (Array.isArray(jsonValue) && jsonValue.length > 4) {\n    text = `Array<${jsonValue.length}>`;\n  } else if (typeof jsonValue === 'string') {\n    text = jsonValue;\n  } else if (typeof jsonValue === 'number') {\n    text = String(jsonValue);\n  } else {\n    try {\n      text = JSON.stringify(jsonValue);\n    } catch (err) {\n      text = '<Non-Serializable Object>';\n    }\n  }\n  const MAX_LENGTH = 50;\n  if (text.length > MAX_LENGTH) {\n    text = text.slice(0, MAX_LENGTH);\n  }\n  return text;\n}\n\nexport function substituteIn(template, json) {\n  /*\n   * Flexible substitution of templates using a json:\n   * - if the json contains the key, use [key]\n   * - if the json does not contain the key, try ['properties'][key]\n   * - if the key contains several keys separated with dots, use them all in a row:\n   *   e.g. 'a.b.c' will read json['a']['b']['c']\n   */\n  let value;\n  let output = template;\n  const propsKey = 'properties';\n  const keyPattern = /{[^}]*}/g;\n  const cleanKey = k => k.replace(/[{}]/g, '');\n  const keys = [...new Set(template.match(keyPattern).map(cleanKey))];\n\n  for (const key of keys) {\n    if (key.includes('.')) {\n      value = json;\n      const subkeys = key.split('.');\n      for (const subkey of subkeys) {\n        if (value.hasOwnProperty(subkey)) {\n          value = value[subkey];\n        } else {\n          value = undefined;\n          break;\n        }\n      }\n    } else if (json.hasOwnProperty(key)) {\n      value = json[key];\n    } else if (json[propsKey] && json[propsKey].hasOwnProperty(key)) {\n      value = json[propsKey][key];\n    } else {\n      value = undefined;\n    }\n    output = output.replaceAll(`{${key}}`, value);\n  }\n\n  return output;\n}\n\nexport default function makeTooltip(tooltip) {\n  /*\n   * If explictly no tooltip passed by user, return null\n   * If a JSON object passed, return a tooltip based on that object\n   *   We expect the user has passed a string template that will take pickedInfo keywords\n   * If a boolean passed, return the default tooltip\n   */\n  if (!tooltip) {\n    return null;\n  }\n\n  if (tooltip.html || tooltip.text) {\n    return pickedInfo => {\n      if (!pickedInfo.picked) {\n        return null;\n      }\n\n      const formattedTooltip = {\n        style: tooltip.style || DEFAULT_STYLE\n      };\n\n      if (tooltip.html) {\n        formattedTooltip.html = substituteIn(tooltip.html, pickedInfo.object);\n      } else {\n        formattedTooltip.text = substituteIn(tooltip.text, pickedInfo.object);\n      }\n\n      return formattedTooltip;\n    };\n  }\n\n  return getTooltipDefault;\n}\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {DeckGL} from '@deck.gl/react';\nimport {BASEMAP} from '@deck.gl/carto';\nimport {Map} from 'react-map-gl';\n\nimport {loadMapboxCSS} from './utils/mapbox-utils';\nimport {useConverter, ConverterProvider} from './utils/json-converter';\nimport makeTooltip from './utils/widget-tooltip';\n\nconst DeckglMap = ({\n    spec,\n    tooltip,\n    width = '100%',\n    height = 500,\n    events = [],\n    description,\n    overlay,\n    mapbox_key,\n    google_maps_key,\n    setProps,\n    lastEvent,\n}) => {\n    const [primaryProps, setPrimaryProps] = useState({});\n    const [overlayProps, setOverlayProps] = useState({});\n    const [librariesLoaded, setLibrariesLoaded] = useState(false);\n    const [configurationLoaded, setConfigurationLoaded] = useState(false);\n    const jsonConverter = useConverter();\n\n    const [viewState, setViewState] = useState({});\n\n    const descriptions = [];\n    if (description) {\n        for (const key in description) {\n            if (\n                [\n                    'top-right',\n                    'top-left',\n                    'bottom-right',\n                    'bottom-left',\n                ].includes(key)\n            ) {\n                const pos = key.split('-');\n                descriptions.push({pos, content: description[key]});\n            }\n        }\n    }\n\n    const handleEvent = useCallback(\n        (eventType, info) => {\n            if (events.includes(eventType)) {\n                setProps({\n                    lastEvent: {\n                        ...info.object,\n                        coordinate: info.coordinate,\n                        eventType,\n                    },\n                });\n            }\n        },\n        [events]\n    );\n\n    const handlers = {\n        onClick: (info) => handleEvent('click', info),\n        onHover: (info) => handleEvent('hover', info),\n        // onViewStateChange: ({viewState, interactionState, oldViewState}) => {\n        //     const viewport = new WebMercatorViewport(viewState);\n        //     viewState.nw = viewport.unproject([0, 0]);\n        //     viewState.se = viewport.unproject([\n        //         viewport.width,\n        //         viewport.height,\n        //     ]);\n        //     handleEvent('deck-view-state-change-event', viewState);\n        // },\n        onDragStart: (info) => handleEvent('drag-start', info),\n        onDrag: (info) => handleEvent('drag', info),\n        onDragEnd: (info) => handleEvent('drag-end', info),\n    };\n\n    const getTooltip = makeTooltip(tooltip);\n\n    const sharedProps = {\n        ...handlers,\n        getTooltip,\n    };\n\n    useEffect(() => {\n        loadMapboxCSS();\n    }, []);\n\n    useEffect(() => {\n        const newPrimaryProps = jsonConverter.convert(spec);\n        console.log(newPrimaryProps);\n        if (newPrimaryProps.initialViewState)\n            setViewState(newPrimaryProps.initialViewState);\n        setPrimaryProps({...primaryProps, ...newPrimaryProps});\n    }, [spec, jsonConverter]);\n\n    useEffect(() => {\n        const newOverlayProps = jsonConverter.convert(overlay);\n        setOverlayProps({...overlayProps, ...newOverlayProps});\n    }, [overlay, jsonConverter]);\n\n    const updateViewState = useCallback(({viewState}) => {\n        setViewState(viewState);\n    }, []);\n\n    if (google_maps_key) {\n        return <div>Google map overlays not supported</div>;\n    }\n\n    return (\n        <div\n            className=\"deckgl-map\"\n            style={{height, width, position: 'relative'}}\n        >\n            <div\n                id=\"deckgl-primary\"\n                style={{width: '100%', height: '100%', position: 'relative'}}\n            >\n                <DeckGL\n                    viewState={viewState}\n                    onViewStateChange={updateViewState}\n                    {...sharedProps}\n                    {...primaryProps}\n                >\n                    <Map\n                        mapStyle={primaryProps.mapStyle || BASEMAP.POSITRON}\n                        mapboxAccessToken={mapbox_key}\n                    />\n                </DeckGL>\n            </div>\n            {overlay && (\n                <div\n                    id=\"deckgl-overlay\"\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        pointerEvents: 'none',\n                    }}\n                >\n                    <DeckGL\n                        viewState={viewState}\n                        contoller={false}\n                        {...sharedProps}\n                        {...overlayProps}\n                        style={{\n                            ...overlayProps.style,\n                            zIndex: 1,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        <Map\n                            mapStyle={overlayProps.mapStyle}\n                            mapboxAccessToken={mapbox_key}\n                        />\n                    </DeckGL>\n                </div>\n            )}\n            {descriptions.map((d, i) => (\n                <div\n                    key={i}\n                    className=\"description\"\n                    style={{\n                        position: 'absolute',\n                        zIndex: 10,\n                        [d.pos[0]]: 10,\n                        [d.pos[1]]: 10,\n                    }}\n                    dangerouslySetInnerHTML={{__html: d.content}}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst Deckgl = (props) => {\n    return (\n        <ConverterProvider\n            customLibraries={props.customLibraries}\n            configuration={props.configuration}\n        >\n            <DeckglMap {...props} />\n        </ConverterProvider>\n    );\n};\n\nexport default Deckgl;\n","/* global document */\nimport {loadCSS} from './css-utils';\n\nimport mapboxgl from 'mapbox-gl';\n\nconst MAPBOX_CSS_URL = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.13.2/mapbox-gl.css';\n\nexport default mapboxgl;\n\nexport function loadMapboxCSS(url = MAPBOX_CSS_URL) {\n  loadCSS(url);\n}\n\n/**\n * Hides elements in the mapbox-gl.js library and adds pydeck tag\n */\nexport function modifyMapboxElements() {\n  const classes = ['mapboxgl-missing-css'];\n  for (const c of classes) {\n    const el = document.getElementsByClassName(c)[0];\n    if (el && el.style) {\n      el.style.display = 'none';\n    }\n  }\n}\n","/* global document */\n// TODO - make sure this can be called multiple times without adding elements\nexport function loadCSS(url) {\n  const link = document.createElement('link');\n  link.type = 'text/css';\n  link.rel = 'stylesheet';\n  link.href = url;\n  document.getElementsByTagName('head')[0].appendChild(link);\n}\n\nexport function createContainer(width, height) {\n  const container = document.createElement('div');\n  container.style.width = Number.isFinite(width) ? `${width}px` : width;\n  container.style.height = `${height}px`;\n  container.style.position = 'relative';\n  return container;\n}\n"],"names":["scriptLoadPromises","lastPickedObject","lastTooltip","classesFilter","x","charAt","toUpperCase","functionsFilter","toLowerCase","extractElements","_step","library","arguments","length","undefined","filter","dict","_iterator","_createForOfIteratorHelper","Object","keys","s","n","done","el","value","err","e","f","jsonConverterConfiguration","classes","deckExports","enumerations","COORDINATE_SYSTEM","GL","GLConstants","ConverterContext","createContext","ConverterProvider","_ref","configuration","customLibraries","children","_useState2","useState","JSONConverter","jsonConverter","setJsonConverter","mergeConfiguration","newConverter","_objectSpread","convertedJson","useEffect","onModuleLoaded","libraryName","module","newConfiguration","functions","loaded","forEach","_ref2","resourceUri","window","defineProperty","set","get","url","script","document","createElement","type","src","querySelector","appendChild","Promise","resolve","onload","loadScript","React","Provider","DEFAULT_STYLE","fontFamily","display","flex","maxWidth","flexDirection","zIndex","getDiv","getTooltipDefault","pickedInfo","picked","object","tooltip","html","tabularize","style","EXCLUDES","Set","json","dataTable","key","has","header","className","textContent","valueElement","toText","row","setStyles","innerHTML","assign","fontWeight","marginRight","overflow","whiteSpace","textOverflow","justifyContent","alignItems","jsonValue","text","Array","isArray","concat","String","JSON","stringify","slice","substituteIn","template","output","propsKey","match","map","k","replace","includes","_step2","_iterator2","split","subkey","hasOwnProperty","replaceAll","DeckglMap","spec","_ref$width","width","_ref$height","height","_ref$events","events","description","overlay","mapbox_key","google_maps_key","setProps","lastEvent","_slicedToArray","primaryProps","setPrimaryProps","_useState4","overlayProps","setOverlayProps","_useState6","_useState8","useContext","_useState10","viewState","setViewState","descriptions","pos","push","content","handleEvent","useCallback","eventType","info","coordinate","handlers","onClick","onHover","onDragStart","onDrag","onDragEnd","getTooltip","formattedTooltip","makeTooltip","sharedProps","link","rel","href","getElementsByTagName","loadMapboxCSS","newPrimaryProps","convert","console","log","initialViewState","newOverlayProps","updateViewState","position","id","DeckGL","_extends","onViewStateChange","Map","mapStyle","BASEMAP","mapboxAccessToken","pointerEvents","contoller","d","i","_ref3","_defineProperty","dangerouslySetInnerHTML","__html","props"],"sourceRoot":""}